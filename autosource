#

BACKUPDIR=$HOME/backup-homedir
[ -d "$BACKUPDIR" ] || mkdir "$BACKUPDIR"

createLinks(){
	for A in * .*; do
		case "$A" in
			. | .. | autosource | personal | x11 | old | .git | .gitignore | $IGNORE ) ;;
			*)
				[ -e ~/"$A" ] && ! [ -L ~/"$A" ] && ! [ -d "$A" ] && mv ~/"$A" "$BACKUPDIR"
				case "$A" in
					.*^${USER})
						[ -L ~/"${A%^*}.$USER" ] || ln -sn ${LINKARGS} "$PWD/$A" ~/"${A%^*}.${USER}"
					;;
					.*^${HOSTNAME})
						[ -L ~/"${A%^*}" ] || ln -sn ${LINKARGS} "$PWD/$A" ~/"${A%^*}"
					;;
					.*^*) echo "Skipping $A";;
					.*)
						[ -L ~/"$A" ] || ln -sn ${LINKARGS} "$PWD/$A" ~/"$A"
					;;
					bin)
						[ -d ~/bin ] || mkdir ~/bin
						if [ -d "$A" ]; then
							pushd "$A" >> /dev/null || return 1
							for B in *; do
								recursive_createLinks "$HOME/$A" "$B"
							done
							popd >> /dev/null
						fi
					;;
					*)
						if [ -d "$A" ]; then
							pushd "$A" >> /dev/null || return 1
							for B in *; do
								recursive_createLinks "$HOME/.$A" "$B"
							done
							popd >> /dev/null
						fi
					;;
				esac
			;;
		esac
	done
}

# $1=destination dir name; $2=file
# creates links
recursive_createLinks(){
	# echo "destDir=$1 file=$2"
	case "$2" in
		$IGNORE ) echo "Ignoring $1/$2"
			return
		;;
	esac

	if [ -L "$1/$2" ] && ! [ -e "$1/$2" ]; then
		echo "Removing invalid symbolic link to nonexistent file"
		rm -f "$1/$2"
	fi

	if [ -e "$1/$2" ] && ! [ -L "$1/$2" ] && ! [ -d "$1/$2" ]; then
		if cmp "$1/$2" "$PWD/$2"; then
			echo "Files are the same; removing file; it will be replaced with a ln"
			rm -f "$1/$2"
		else
			mkdir -p "$BACKUPDIR/$1" && mv -vf "$1/$2" "$BACKUPDIR/$1/$2"
		fi
	fi

	if [ -f "$2" ]; then
		[ -L "$1/$2" ] || ln -sn ${LINKARGS} "$PWD/$2" "$1/$2"
	elif ! [ -d "$1/$2" ]; then
		# if homedir doesn't have the directory, create a link to this dir
		[ -L "$1/$2" ] || ln -sn ${LINKARGS} "$PWD/$2" "$1/$2" 
	elif [ -d "$2" ] && [ -d "$1" ] && ! [ -L "$1/$2" ]; then
		pushd "$2" >> /dev/null || return 2
		for B in *; do
			recursive_createLinks "$1/$2" "$B" 
		done
		popd >> /dev/null
	fi
}

createLinks
[ -d ~/.my_links ] || mkdir ~/.my_links
[ -L ~/.my_links/autosource ] || ln -snf ${MY_BINSRC:-~/bin/src}/my_links.autosource ~/.my_links/autosource

if [ -f ~/.includePersonal ]; then
		for D in personal x11; do
			echo "Autosourcing subdir $D"
			if pushd "$D" >> /dev/null; then
				source autosource
				popd >> /dev/null
			fi
		done

		#[ -f ~/.gnupg/local_id_rsa.asc ] || ln -s $MY_EHOMEDIR/encrypted/home/ssh/id_rsa-arl.asc ~/.gnupg/local_id_rsa.asc
fi


rmdir $BACKUPDIR

# [ -f ~/.face ] || ln -snf ~/online/Dropbox/Public/html/images/dnlam.jpg ~/.face

#  if pushd $MY_BIN/online > /dev/null; then
#  	chmod a+x *.sh *
#  	#chmod a+x direct/*.sh direct/*
#  	popd
#  fi

